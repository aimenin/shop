{"ast":null,"code":"import ShopActionsTypes from './shop.types';\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionsTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionSuccessCall = collectionsMap => ({\n  type: ShopActionsTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionFailure = errorMessage => ({\n  type: ShopActionsTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSuccessCall(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["D:\\programming\\projects\\shop\\client\\src\\redux\\shop\\shop.actions.js"],"names":["ShopActionsTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionSuccessCall","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,cAA7B;AACA,SAASC,+BAAT,EAA0CC,SAA1C,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,gBAAgB,CAACK;AADmB,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAGC,cAAc,KAAK;AAC3DH,EAAAA,IAAI,EAAEJ,gBAAgB,CAACQ,yBADoC;AAE3DC,EAAAA,OAAO,EAAEF;AAFkD,CAAL,CAAjD;AAKP,OAAO,MAAMG,sBAAsB,GAAGC,YAAY,KAAK;AACrDP,EAAAA,IAAI,EAAEJ,gBAAgB,CAACY,yBAD8B;AAErDH,EAAAA,OAAO,EAAEE;AAF4C,CAAL,CAA3C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMZ,cAAc,GAAGN,+BAA+B,CAACkB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,0BAA0B,CAACC,cAAD,CAA3B,CAAR;AACD,KALH,EAMGa,KANH,CAMSC,KAAK,IAAIP,QAAQ,CAACJ,sBAAsB,CAACW,KAAK,CAACC,OAAP,CAAvB,CAN1B;AAOD,GAXD;AAYD,CAbM","sourcesContent":["import ShopActionsTypes from './shop.types';\r\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n  type: ShopActionsTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionSuccessCall = collectionsMap => ({\r\n  type: ShopActionsTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionsMap,\r\n});\r\n\r\nexport const fetchCollectionFailure = errorMessage => ({\r\n  type: ShopActionsTypes.FETCH_COLLECTIONS_FAILURE,\r\n  payload: errorMessage,\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return dispatch => {\r\n    const collectionRef = firestore.collection('collections');\r\n    dispatch(fetchCollectionsStart());\r\n\r\n    collectionRef\r\n      .get()\r\n      .then(snapshot => {\r\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionSuccessCall(collectionsMap));\r\n      })\r\n      .catch(error => dispatch(fetchCollectionFailure(error.message)));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}